services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: message_postgres
    environment:
      POSTGRES_USER: insider
      POSTGRES_PASSWORD: insider123
      POSTGRES_DB: insider_messaging
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U insider -d insider_messaging"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: message_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 3s
      retries: 3
    restart: unless-stopped

  # Message Sending Service
  message-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: message_service
    environment:
      # Database Configuration
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: insider
      DB_PASSWORD: insider123
      DB_NAME: insider_messaging
      DB_SSL_MODE: disable
      
      # Redis Configuration
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ""
      REDIS_DB: 0
      
      # Server Configuration
      SERVER_PORT: 8080
      SERVER_HOST: 0.0.0.0
      
      # External Message API Configuration
      MESSAGE_API_URL: https://webhook.site/e89297a2-9e14-4e1c-b2be-743c3d073737
      MESSAGE_API_TIMEOUT: 30s
      
      # Scheduler Configuration
      SCHEDULER_INTERVAL: 2m
      MESSAGES_PER_BATCH: 2
      
      # Logging
      LOG_LEVEL: info
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  default:
    name: message_network
